import {useRouter} from 'next/router'
import styles from "../../styles/Home.module.css";
import Head from "next/head";
import {Fragment, useEffect, useState} from 'react'
import {Listbox, Transition} from '@headlessui/react'
import {CheckIcon, SelectorIcon} from '@heroicons/react/solid'
import {ChatIcon} from '@heroicons/react/solid'
import axios from "axios";


const languages = [
    {name: 'ðŸ‡¬ðŸ‡§ English'},
    {name: 'ðŸ‡ªðŸ‡¸ Spanish'},
    {name: 'ðŸ‡«ðŸ‡· French'},
]

export default function Comments() {
    const router = useRouter();
    const {movie} = router.query;
    const [selectedLang, setSelectedLang] = useState(languages[0]);
    const [comments, setComments] = useState([]);


    useEffect(() => {
        // TODO: inform the back-end to translate again.
        axios.get(`http://localhost:4000/get-comments?movie=${movie}&language=${selectedLang.name.slice(5, selectedLang.name.length)}`)
            .then(function (response) {
                // handle success
                setComments(response.data.comments)
            })
            .catch(function (error) {
                // handle error
                console.log(error);
            })
            .then(function () {
                // always executed
            });
    }, [selectedLang, movie])

    return (

        <div className = {styles.container}>
            <Head>
                <title>Movies</title>
                <meta name = "description" content = "Generated by create next app"/>
                <link rel = "icon" href = "/favicon.ico"/>
            </Head>
            <main className = "grid justify-items-center">
                <p className = {styles.description}>Comments on movie <span
                    className = "text-blue-600">{`"${movie}"`}</span></p>
                <p>Select the desired language</p>
                <div className="w-72 top-16 mt-9">
                    <Listbox value={selectedLang} onChange={setSelectedLang}>
                        <div className="relative mt-1">
                            <Listbox.Button className="relative w-full py-2 pl-3 pr-10 text-left bg-white rounded-lg shadow-md cursor-default focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white focus-visible:ring-offset-blue-300 focus-visible:ring-offset-2 focus-visible:border-indigo-500 sm:text-sm">
                                <span className="block truncate">{selectedLang.name}</span>
                                <span className="absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none">
              <SelectorIcon
                  className="w-5 h-5 text-gray-400"
                  aria-hidden="true"
              />
            </span>
                            </Listbox.Button>
                            <Transition
                                as={Fragment}
                                leave="transition ease-in duration-100"
                                leaveFrom="opacity-100"
                                leaveTo="opacity-0"
                            >
                                <Listbox.Options className="absolute w-full py-1 mt-1 overflow-auto text-base bg-white rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm">
                                    {languages.map((language, languageIdx) => (
                                        <Listbox.Option
                                            key={languageIdx}
                                            className={({ active }) =>
                                                `cursor-default select-none relative py-2 pl-10 pr-4 ${
                                                    active ? 'text-blue-900 bg-blue-100' : 'text-gray-900'
                                                }`
                                            }
                                            value={language}
                                        >
                                            {({ selected}) => (
                                                <>
                      <span
                          className={`block truncate ${
                              selectedLang ? 'font-medium' : 'font-normal'
                          }`}
                      >
                        {language.name}
                      </span>
                                                    {selected ? (
                                                        <span className="absolute inset-y-0 left-0 flex items-center pl-3 text-blue-600">
                          <CheckIcon className="w-5 h-5" aria-hidden="true" />
                        </span>
                                                    ) : null}
                                                </>
                                            )}
                                        </Listbox.Option>
                                    ))}
                                </Listbox.Options>
                            </Transition>
                        </div>
                    </Listbox>
                </div>

                {/*comments list*/}
                <div className = "mt-32 bg-white overflow-hidden shadow sm:rounded-md">
                    <ul role = "list" className = "divide-y divide-gray-200">
                        {comments.map(({id, commentText, anger}) => (
                            <li key = {id}>
                                <a className = "block hover:bg-gray-50">
                                    <div className = "px-4 py-4 sm:px-6">
                                        <div className = "flex items-center justify-between">
                                            <p className = "text-sm font-medium text-indigo-600 truncate">Comment
                                                #{id}</p>
                                            <div className = "ml-2 flex-shrink-0 flex">
                                                <p className = "px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                                                    {anger}%
                                                </p>
                                            </div>
                                        </div>
                                        <div className = "mt-2 sm:flex sm:justify-between">
                                            <div className = "sm:flex">
                                                <p className = "flex items-center text-sm text-gray-800 pr-64">
                                                    <ChatIcon className = "flex-shrink-0 mr-1.5 h-5 w-5 text-gray-600"
                                                              aria-hidden = "true"/> {commentText}
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </a>
                            </li>
                        ))}
                    </ul>
                </div>
            </main>
        </div>
    )
}

